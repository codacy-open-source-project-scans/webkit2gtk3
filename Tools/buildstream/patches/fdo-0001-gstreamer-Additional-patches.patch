From da142fe786c6a17eedcf7ec785be2dcf023cf5a3 Mon Sep 17 00:00:00 2001
From: Philippe Normand <philn@igalia.com>
Date: Mon, 15 Jan 2024 09:27:07 +0000
Subject: [PATCH] gstreamer: Additional patches

decodebin3 patch will ship in 1.24 and vpxdec patch will ship in 1.22.9.
---
 ...x-clean-up-of-EOS-d-parsebin-src-pad.patch | 81 +++++++++++++++++++
 ...priate-domain-and-code-for-decoding-.patch | 38 +++++++++
 2 files changed, 119 insertions(+)
 create mode 100644 patches/gstreamer/0001-decodebin3-Fix-clean-up-of-EOS-d-parsebin-src-pad.patch
 create mode 100644 patches/gstreamer/0001-vpxdec-Use-appropriate-domain-and-code-for-decoding-.patch

diff --git a/patches/gstreamer/0001-decodebin3-Fix-clean-up-of-EOS-d-parsebin-src-pad.patch b/patches/gstreamer/0001-decodebin3-Fix-clean-up-of-EOS-d-parsebin-src-pad.patch
new file mode 100644
index 0000000..8541e2a
--- /dev/null
+++ b/patches/gstreamer/0001-decodebin3-Fix-clean-up-of-EOS-d-parsebin-src-pad.patch
@@ -0,0 +1,81 @@
+From 952f25210408239bdf8840f6126d4c9e1129fbd9 Mon Sep 17 00:00:00 2001
+From: Philippe Normand <philn@igalia.com>
+Date: Fri, 5 Jan 2024 12:13:49 +0000
+Subject: [PATCH] decodebin3: Fix clean-up of EOS'd parsebin src pad
+
+In `parse_chain_output_probe()` the corresponding input stream might receive EOS
+and thus be removed before the actual pad is removed. So we cannot assert about
+this in `parsebin_pad_removed_cb()`.
+
+Also, driving-by, protect `find_input_stream_for_pad()` with the selection lock
+similarly to other functions accessing the input streams list.
+
+Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/5887>
+---
+ .../gst/playback/gstdecodebin3-parse.c               | 12 ++++++++++--
+ .../gst-plugins-base/gst/playback/gstdecodebin3.c    | 10 ++++++++--
+ 2 files changed, 18 insertions(+), 4 deletions(-)
+
+diff --git a/subprojects/gst-plugins-base/gst/playback/gstdecodebin3-parse.c b/subprojects/gst-plugins-base/gst/playback/gstdecodebin3-parse.c
+index 2b7ce7ac13..b380d86fad 100644
+--- a/subprojects/gst-plugins-base/gst/playback/gstdecodebin3-parse.c
++++ b/subprojects/gst-plugins-base/gst/playback/gstdecodebin3-parse.c
+@@ -545,6 +545,7 @@ parsebin_pad_added_cb (GstElement * demux, GstPad * pad, DecodebinInput * input)
+   SELECTION_UNLOCK (dbin);
+ }
+ 
++/* WITH SELECTION_LOCK TAKEN! */
+ static DecodebinInputStream *
+ find_input_stream_for_pad (GstDecodebin3 * dbin, GstPad * pad)
+ {
+@@ -568,16 +569,23 @@ parsebin_pad_removed_cb (GstElement * demux, GstPad * pad, DecodebinInput * inp)
+   if (!GST_PAD_IS_SRC (pad))
+     return;
+ 
++  SELECTION_LOCK (dbin);
++
+   GST_DEBUG_OBJECT (pad, "removed");
+   input = find_input_stream_for_pad (dbin, pad);
+-  g_assert (input);
++
++  if (input == NULL) {
++    GST_DEBUG_OBJECT (pad,
++        "Input stream not found, it was cleaned-up earlier after receiving EOS");
++    SELECTION_UNLOCK (dbin);
++    return;
++  }
+ 
+   /* If there are no pending pads, this means we will definitely not need this
+    * stream anymore */
+ 
+   GST_DEBUG_OBJECT (pad, "Remove input stream %p", input);
+ 
+-  SELECTION_LOCK (dbin);
+   slot = get_slot_for_input (dbin, input);
+   remove_input_stream (dbin, input);
+ 
+diff --git a/subprojects/gst-plugins-base/gst/playback/gstdecodebin3.c b/subprojects/gst-plugins-base/gst/playback/gstdecodebin3.c
+index 974180b8bd..09acb65c99 100644
+--- a/subprojects/gst-plugins-base/gst/playback/gstdecodebin3.c
++++ b/subprojects/gst-plugins-base/gst/playback/gstdecodebin3.c
+@@ -1233,9 +1233,15 @@ reset_input (GstDecodebin3 * dbin, DecodebinInput * input)
+   }
+   if (input->identity) {
+     GstPad *idpad = gst_element_get_static_pad (input->identity, "src");
+-    DecodebinInputStream *stream = find_input_stream_for_pad (dbin, idpad);
+-    gst_object_unref (idpad);
++    DecodebinInputStream *stream;
++
++    SELECTION_LOCK (dbin);
++    stream = find_input_stream_for_pad (dbin, idpad);
+     remove_input_stream (dbin, stream);
++    SELECTION_UNLOCK (dbin);
++
++    gst_object_unref (idpad);
++
+     gst_element_set_state (input->identity, GST_STATE_NULL);
+     gst_bin_remove (GST_BIN (dbin), input->identity);
+     gst_clear_object (&input->identity);
+-- 
+2.43.0
+
diff --git a/patches/gstreamer/0001-vpxdec-Use-appropriate-domain-and-code-for-decoding-.patch b/patches/gstreamer/0001-vpxdec-Use-appropriate-domain-and-code-for-decoding-.patch
new file mode 100644
index 0000000..4a08e0a
--- /dev/null
+++ b/patches/gstreamer/0001-vpxdec-Use-appropriate-domain-and-code-for-decoding-.patch
@@ -0,0 +1,38 @@
+From 36518d81e75712c71df0e92ed9c2d46410554f9c Mon Sep 17 00:00:00 2001
+From: Philippe Normand <philn@igalia.com>
+Date: Fri, 12 Jan 2024 12:51:27 +0000
+Subject: [PATCH] vpxdec: Use appropriate domain and code for decoding errors
+
+STREAM domain and DECODE error is commonly used in other decoders. ENCODE is for
+encoders.
+
+Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/5918>
+---
+ subprojects/gst-plugins-good/ext/vpx/gstvpxdec.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/subprojects/gst-plugins-good/ext/vpx/gstvpxdec.c b/subprojects/gst-plugins-good/ext/vpx/gstvpxdec.c
+index d5351b839a..091207d957 100644
+--- a/subprojects/gst-plugins-good/ext/vpx/gstvpxdec.c
++++ b/subprojects/gst-plugins-good/ext/vpx/gstvpxdec.c
+@@ -725,7 +725,7 @@ gst_vpx_dec_handle_frame (GstVideoDecoder * decoder, GstVideoCodecFrame * frame)
+   if (status) {
+     GstVideoDecoderRequestSyncPointFlags flags = 0;
+ 
+-    GST_VIDEO_DECODER_ERROR (decoder, 1, LIBRARY, ENCODE,
++    GST_VIDEO_DECODER_ERROR (decoder, 1, STREAM, DECODE,
+         ("Failed to decode frame"), ("%s", gst_vpx_error_name (status)), ret);
+ 
+     if (gst_video_decoder_get_needs_sync_point (decoder))
+@@ -740,7 +740,7 @@ gst_vpx_dec_handle_frame (GstVideoDecoder * decoder, GstVideoCodecFrame * frame)
+   if (img) {
+     if (vpxclass->get_frame_format (dec, img, &fmt) == FALSE) {
+       vpx_img_free (img);
+-      GST_ELEMENT_ERROR (decoder, LIBRARY, ENCODE,
++      GST_ELEMENT_ERROR (decoder, STREAM, DECODE,
+           ("Failed to decode frame"), ("Unsupported color format %d",
+               img->fmt));
+       gst_video_codec_frame_unref (frame);
+-- 
+2.43.0
+
-- 
2.43.0

